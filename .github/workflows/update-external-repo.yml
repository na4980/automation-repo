# .github/workflows/update-external-repo.yml
name: Update External Repository

on:
  workflow_dispatch:
    inputs:
      target_owner:
        description: 'Target repository owner'
        required: true
        default: 'tokamak-network'
      target_repo:
        description: 'Target repository name'
        required: true
        default: 'trh-sdk'
      update_message:
        description: 'Update message'
        required: true
        default: 'Update configuration'

  repository_dispatch:
    types: [update-external-repo]

jobs:
  update-external-repo:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
      pull-requests: write    # PR Í¥ÄÎ†® ÏûëÏóÖ
      metadata: read          # Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ ÏùΩÍ∏∞

      
    steps:
      - name: Setup variables
        id: vars
        run: |
          # workflow_dispatch ÎòêÎäî repository_dispatchÏóêÏÑú Î≥ÄÏàò ÏÑ§Ï†ï
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "target_owner=${{ github.event.inputs.target_owner }}" >> $GITHUB_OUTPUT
            echo "target_repo=${{ github.event.inputs.target_repo }}" >> $GITHUB_OUTPUT
            echo "update_message=${{ github.event.inputs.update_message }}" >> $GITHUB_OUTPUT
          else
            echo "target_owner=${{ github.event.client_payload.target_owner }}" >> $GITHUB_OUTPUT
            echo "target_repo=${{ github.event.client_payload.target_repo }}" >> $GITHUB_OUTPUT
            echo "update_message=${{ github.event.client_payload.update_message }}" >> $GITHUB_OUTPUT
          fi
          
          # Î∏åÎûúÏπò Ïù¥Î¶Ñ ÏÉùÏÑ±
          branch_name="automation-update-$(date +%Y%m%d-%H%M%S)"
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Generate update content
        id: content
        run: |
          # ÏóÖÎç∞Ïù¥Ìä∏Ìï† ÎÇ¥Ïö© ÏÉùÏÑ±
          cat > update_content.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "updated_by": "na4980/automation-repo",
            "message": "${{ steps.vars.outputs.update_message }}",
            "version": "1.2.3",
            "configuration": {
              "feature_flags": {
                "new_feature": true,
                "beta_mode": false
              },
              "settings": {
                "timeout": 30,
                "retry_count": 3
              }
            }
          }
          EOF
          
          echo "Content generated:"
          cat update_content.json

      - name: Complete fork setup and update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e  # ÏóêÎü¨ Ïãú Ï§ëÎã®
          
          echo "üöÄ Starting automated update process..."
          
          # Fork ÌôïÏù∏ Î∞è ÏÉùÏÑ±
          if ! gh repo view ${{ github.repository_owner }}/${{ github.event.inputs.target_repo }} >/dev/null 2>&1; then
            echo "Creating fork..."
            gh repo fork ${{ github.event.inputs.target_owner }}/${{ github.event.inputs.target_repo }} --clone=false
            sleep 10
          fi
          
          # Git ÏÑ§Ï†ï
          git config --global credential.helper store
          echo "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com" > ~/.git-credentials
          git config --global user.name "na4980-automation[bot]"
          git config --global user.email "na4980-automation[bot]@users.noreply.github.com"
          
          # ÌÅ¥Î°†
          gh repo clone ${{ github.repository_owner }}/${{ github.event.inputs.target_repo }} trh-sdk_fork
          cd trh-sdk_fork
          
          # upstream ÏÑ§Ï†ï
          if git remote | grep -q "^upstream$"; then
            git remote set-url upstream https://github.com/${{ github.event.inputs.target_owner }}/${{ github.event.inputs.target_repo }}.git
          else
            git remote add upstream https://github.com/${{ github.event.inputs.target_owner }}/${{ github.event.inputs.target_repo }}.git
          fi
          
          # ÏµúÏã† Î≥ÄÍ≤ΩÏÇ¨Ìï≠ Í∞ÄÏ†∏Ïò§Í∏∞
          git fetch upstream
          git checkout -b ${{ steps.vars.outputs.branch_name }} upstream/main
          
          # ÌååÏùº ÏàòÏ†ï
          mkdir -p config
          echo '{"updated":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}' > config/automation_config.json
          
          # Ïª§Î∞ã Î∞è Ìë∏Ïãú
          git add .
          git commit -m "ü§ñ Automated update: ${{ steps.vars.outputs.update_message }}"
          git push origin ${{ steps.vars.outputs.branch_name }}
          
          echo "‚úÖ Update completed successfully"

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd trh-sdk_fork
          
          # PR ÏÉùÏÑ±
          gh pr create \
            --repo ${{ steps.vars.outputs.target_owner }}/${{ steps.vars.outputs.target_repo }} \
            --title "ü§ñ Automated Update: ${{ steps.vars.outputs.update_message }}" \
            --body "## Automated Update from na4980/automation-repo

          **Update Summary:**
          - **Message:** ${{ steps.vars.outputs.update_message }}
          - **Timestamp:** $(date -u +%Y-%m-%dT%H:%M:%SZ)
          - **Source:** na4980/automation-repo
          - **Branch:** ${{ steps.vars.outputs.branch_name }}

          ### Changes Made:
          - ‚úÖ Updated \`config/automation_config.json\`
          - ‚úÖ Added \`automation_info.md\`
          - ‚úÖ Updated \`README.md\`

          ### Configuration Updates:
          - Version bumped to 1.2.3
          - Enabled new feature flags
          - Optimized timeout settings

          ### Files Changed:
          \`\`\`
          config/automation_config.json
          automation_info.md
          README.md
          \`\`\`

          ---
          *This PR was automatically created by [na4980/automation-repo](https://github.com/na4980/automation-repo)*
          
          **Review Checklist:**
          - [ ] Configuration changes look correct
          - [ ] No sensitive information exposed
          - [ ] Tests pass (if applicable)
          
          cc @${{ steps.vars.outputs.target_owner }}" \
            --base main \
            --head ${{ github.repository_owner }}:${{ steps.vars.outputs.branch_name }} \
            --label "automation,configuration,enhancement"

      - name: Output results
        run: |
          echo "‚úÖ Successfully created PR in ${{ steps.vars.outputs.target_owner }}/${{ steps.vars.outputs.target_repo }}"
          echo "Branch: ${{ steps.vars.outputs.branch_name }}"
          echo "You can view the PR at: https://github.com/${{ steps.vars.outputs.target_owner }}/${{ steps.vars.outputs.target_repo }}/pulls"